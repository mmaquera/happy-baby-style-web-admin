const { Pool } = require('pg');
require('dotenv').config();

async function testSimpleConnection() {
  console.log('üîç Prueba simple de conexi√≥n a PostgreSQL...\n');

  const config = {
    host: process.env.SUPABASE_DB_HOST || 'db.uumwjhoqkiiyxuperrws.supabase.co',
    port: parseInt(process.env.SUPABASE_DB_PORT || '5432'),
    database: process.env.SUPABASE_DB_NAME || 'postgres',
    user: process.env.SUPABASE_DB_USER || 'postgres.uumwjhoqkiiyxuperrws',
    password: process.env.SUPABASE_DB_PASSWORD,
    ssl: {
      rejectUnauthorized: false
    },
    connectionTimeoutMillis: 5000, // 5 segundos de timeout
    query_timeout: 5000
  };

  console.log('üìã Configuraci√≥n:');
  console.log(`   Host: ${config.host}`);
  console.log(`   Port: ${config.port}`);
  console.log(`   Database: ${config.database}`);
  console.log(`   User: ${config.user}`);
  console.log(`   Password: ${config.password ? '‚úÖ Configurado' : '‚ùå No configurado'}`);
  console.log(`   SSL: ${JSON.stringify(config.ssl)}`);
  console.log(`   Timeout: ${config.connectionTimeoutMillis}ms\n`);

  if (!config.password) {
    console.log('‚ùå Error: SUPABASE_DB_PASSWORD no est√° configurado');
    return;
  }

  console.log('üîÑ Intentando conectar...');
  
  const pool = new Pool(config);

  try {
    console.log('‚è≥ Conectando...');
    const client = await pool.connect();
    console.log('‚úÖ Conexi√≥n exitosa!\n');

    console.log('üìä Probando consulta simple...');
    const result = await client.query('SELECT NOW() as current_time');
    console.log('‚úÖ Consulta exitosa!');
    console.log(`   Hora del servidor: ${result.rows[0].current_time}\n`);

    console.log('üìã Verificando tablas...');
    const tablesResult = await client.query(`
      SELECT table_name 
      FROM information_schema.tables 
      WHERE table_schema = 'public' 
      ORDER BY table_name
    `);
    
    console.log('‚úÖ Tablas encontradas:');
    if (tablesResult.rows.length === 0) {
      console.log('   ‚ö†Ô∏è  No se encontraron tablas (puede ser normal si es una BD nueva)');
    } else {
      tablesResult.rows.forEach(row => {
        console.log(`   - ${row.table_name}`);
      });
    }

    client.release();
    console.log('\nüéâ ¬°Conexi√≥n directa a PostgreSQL funcionando correctamente!');

  } catch (error) {
    console.error('‚ùå Error de conexi√≥n:', error.message);
    console.log('\nüîç Detalles del error:');
    console.log(`   C√≥digo: ${error.code}`);
    console.log(`   Detalle: ${error.detail}`);
    console.log(`   Hint: ${error.hint}`);
    
    console.log('\nüí° Posibles soluciones:');
    console.log('   1. Verifica que SUPABASE_DB_PASSWORD est√© correcto');
    console.log('   2. Aseg√∫rate de que tu IP est√© en la whitelist de Supabase');
    console.log('   3. Verifica que el proyecto Supabase est√© activo');
    console.log('   4. Prueba con una conexi√≥n VPN si est√°s en una red corporativa');
    console.log('   5. Verifica que el puerto 5432 no est√© bloqueado');
  } finally {
    await pool.end();
  }
}

testSimpleConnection(); 